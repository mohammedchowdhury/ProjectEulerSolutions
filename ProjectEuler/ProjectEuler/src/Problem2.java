import java.util.ArrayList;

public class Problem2 {

	public static void main(String[] args) {

		//		Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
		//			1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
		//			By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

		ArrayList<Integer> fib = new ArrayList<>(); 

		fib.add(1); 
		fib.add(2); 
		int seq = 2;

		while(seq<4000000) {
			
			int place = fib.size(); 

			int n = place-1; 
			int x = place-2; 

			int temp = fib.get(n)+fib.get(x); 
			
			if(temp<4000000) {
				System.out.println(temp);
				fib.add(temp); 
			}
			seq = temp; 
		}

		int sum = 0; 
		for(int a = 0; a<fib.size();a++) {
			if(fib.get(a)%2==0) {
				sum = sum+fib.get(a); 
			}
		}

		System.out.println(sum);

	}



}
